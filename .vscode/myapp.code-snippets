{
	"reactRender": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "jsxCode",
		"body": [
			"import React from 'react'\n",
			"class ${1:$TM_FILENAME_BASE} extends React.Component {\n",
			"\trender(){\n",
			"\t\treturn(",
			"\t\t\t<div>\n",
			"\t\t\t</div>",
			"\t\t)",
			"\t}",
			"}\n\n",
			"export default ${1:$TM_FILENAME_BASE}\n",
		],
		"description": "react的组件代码片段"
	},
	"className": {
		// "scope": "javascript,typescript",
		"prefix": "cls",
		"body": [
			"className={`${styles['${1:classname}']}`}",
		],
		"description": "快速添加class"
	},
	"impStyle": {
		// "scope": "javascript,typescript",
		"prefix": "impstyles",
		"body": [
			"import styles from './${1:$TM_FILENAME_BASE}.less';",
		],
		"description": "导入样式"
	},
	"impImage": {
		// "scope": "javascript,typescript",
		"prefix": "impImage",
		"body": [
			"import Image from '@/components/Image/Image';",
		],
		"description": "导入样式"
	},
	"impRedux": {
		// "scope": "javascript,typescript",
		"prefix": "impRedux",
		"body": [
			"import { connect } from 'react-redux';",
			"import { mapStateToProps, mapDispatchToProps } from '@/store/public-map';",
			"export default connect(mapStateToProps, mapDispatchToProps)($TM_FILENAME_BASE);",
		],
		"description": "导入样式"
	},
	"reactRender2": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "jsxCode2",
		"body": [
			"import React, { useContext } from 'react'",
			"import styles from './${1:$TM_FILENAME_BASE}.less';",
			"import Context from '@/context';\n",

			"const ${1:$TM_FILENAME_BASE} = (props) =>{",
			"\tlet  {$TM_FILENAME_BASE} = props",
			"\tconst { id } = useContext(Context);",
			"\treturn(",
			"\t\t<div>",
			"\t\t\t$TM_FILENAME_BASE",
			"\t\t</div>",
			"\t)",
			"}\n\n",
			"export default ${1:$TM_FILENAME_BASE}"

		],
		"description": "react的组件代码片段"
	},
	"imgPar": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "imgPar",
		"body": [
			"+'?param=${50}y${50}'",
		],
		"description": "图片设置加载宽高"
	},
	"media": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "media",
		"body": [
			"\n@media (max-width: 900px) {",
			"$1",
			"}",
		],
		"description": "媒体查询"
	},
	"imptool": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "imptool",
		"body": [
			"import { ${1:toolname} } from '@/assets/js/tool';",
		],
		"description": "导入工具函数"
	},
	"impload": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "impload",
		"body": [
			"import Loading from '@/components/loading/Loading2';",
			"const loadContent = (",
			"\t<div style={{height:'400px'}}>",
			"\t\t<Loading />",
			"\t</div>",
			")",
		],
		"description": "impload"
	},

	"fco": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "fco",
		"body": [
			"const ${ComponentName} = props => { ",
			"\tlet { item } = props;",
			"\treturn (",
			"\t\t<div>",
			"\t\t\t${ComponentName}",
			"\t\t</div>",
			"\t)",
			"",
			"}",
		],
		"description": "函数是组件"
	},
	"useState": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "useState",
		"body": [
			"const [${value},set${value}] = useState(${value});",
		],
		"description": "useState"
	},
	"map": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "map",
		"body": [
			"${arr}.map((item,index) =>(<Item item={item} key={index} />))",
		],
		"description": "map"
	},
	"html": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "html",
		"body": [
			"dangerouslySetInnerHTML={{ __html: ${item} }}",
		],
		"description": "html"
	},
	"useEffect": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "useEffect",
		"body": [
			"useEffect(() => {",
			"",
			"}, []);"
		],
		"description": "useEffect"
	},
	"getFunction": {
		// "scope": "javascript,typescript,jsx",
		"prefix": "getFunction",
		"body": [
			"// ^ 获取${name}",
			"const _${name} = async () => {",
			"\tconst res = await ${name}();",
			"\tif (res.code !== 200) return;",
			"\tconsole.log(res);",
			"};"
		],
		"description": "getFunction"
	},

}